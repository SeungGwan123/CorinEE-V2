version: "3.8"

services:
  server:
    build:
      context: .
      dockerfile: dockerfile-server-v2
    image: seunggwan/corinee-server-v2
    container_name: corinee_server_v2
    env_file:
      - .env
    environment:
      - DB_HOST=mysql-v2
      - DB_PORT=3307
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_HOST=redis-v2
      - REDIS_PORT=6380
    ports:
      - "3002:3002"
    depends_on:
      - mysql-v2
      - redis-v2
    networks:
      - app-network

  client:
    build:
      context: .
      dockerfile: dockerfile-client-v2
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    image: seunggwan/corinee-client-v2
    container_name: corinee_client_v2
    env_file:
      - .env
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
    networks:
      - app-network

  mysql-v2:
    image: mysql:8.0
    container_name: corinee_mysql_v2
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD_V2}
      - MYSQL_DATABASE=${MYSQL_DATABASE_V2}
      - MYSQL_USER=${MYSQL_USER_V2}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD_V2}
    volumes:
      - mysql_data_v2:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app-network

  redis-v2:
    image: redis:6
    container_name: corinee_redis_v2
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD_V2}
    volumes:
      - redis_data_v2:/data
    ports:
      - "6380:6379"
    networks:
      - app-network

networks:
  app-network:
    name: corinee_app-network_v2
    driver: bridge

volumes:
  mysql_data_v2:
  redis_data_v2:
